<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 ******************************************************************************
 * Copyright (c) 2011 Oracle
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Konstantin Komissarchik - initial implementation and ongoing maintenance
 ******************************************************************************
-->

<extension xmlns="http://www.eclipse.org/sapphire/xmlns/extension">
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.serialization.ValueSerializationService</type>
        <factory>org.eclipse.sapphire.modeling.serialization.internal.ValueSerializationServiceFactory</factory>
        <id>Sapphire.ValueSerializationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.DefaultValueService</type>
        <factory>org.eclipse.sapphire.modeling.internal.DefaultValueServiceFactory</factory>
        <id>Sapphire.DefaultValueService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.DerivedValueService</type>
        <factory>org.eclipse.sapphire.modeling.internal.DerivedValueServiceFactory</factory>
        <id>Sapphire.DerivedValueService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.PossibleValuesService</type>
        <factory>org.eclipse.sapphire.modeling.internal.PossibleValuesServiceFactory</factory>
        <id>Sapphire.PossibleValuesService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.PossibleValuesService</type>
        <factory>org.eclipse.sapphire.modeling.internal.EnumPossibleValuesService$Factory</factory>
        <id>Sapphire.PossibleValuesService.Enum</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.CountConstraintValidationService$Factory</factory>
        <id>Sapphire.CountConstraintValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.RequiredPropertyValidationService$Factory</factory>
        <id>Sapphire.RequiredPropertyValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.UniqueValueValidationServiceFactory</factory>
        <id>Sapphire.UniqueValueValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.ReferenceValidationService$Factory</factory>
        <id>Sapphire.ReferenceValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.AbsolutePathValidationService$Factory</factory>
        <id>Sapphire.AbsolutePathValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.RelativePathValidationService$Factory</factory>
        <id>Sapphire.RelativePathValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.MalformedValueValidationService$Factory</factory>
        <id>Sapphire.MalformedValueValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.PossibleValuesValidationService$Factory</factory>
        <id>Sapphire.PossibleValuesValidationService</id>
    </model-property-service>
    <model-element-service>
        <type>org.eclipse.sapphire.modeling.ImageService</type>
        <factory>org.eclipse.sapphire.modeling.internal.StaticImageService$Factory</factory>
        <id>Sapphire.ImageService.Static</id>
    </model-element-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ModelPropertyValidationService</type>
        <factory>org.eclipse.sapphire.modeling.validation.internal.NumericRangeValidationService$Factory</factory>
        <id>Sapphire.NumericRangeValidationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.EnablementService</type>
        <factory>org.eclipse.sapphire.modeling.internal.ParentBasedEnablementService$Factory</factory>
        <id>Sapphire.EnablementService.ParentPropertyState</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.EnablementService</type>
        <factory>org.eclipse.sapphire.modeling.internal.FunctionBasedEnablementService$Factory</factory>
        <id>Sapphire.EnablementService.FunctionBased</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ValueNormalizationService</type>
        <factory>org.eclipse.sapphire.modeling.internal.StandardValueNormalizationServiceFactory</factory>
        <id>Sapphire.ValueNormalizationService</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.RelativePathService</type>
        <factory>org.eclipse.sapphire.modeling.internal.ModelRelativePathService$Factory</factory>
        <id>Sapphire.RelativePathService.Model</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ValueLabelService</type>
        <factory>org.eclipse.sapphire.modeling.internal.DefaultValueLabelService$Factory</factory>
        <id>Sapphire.ValueLabelService.Default</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ValueLabelService</type>
        <factory>org.eclipse.sapphire.modeling.internal.EnumValueLabelService$Factory</factory>
        <id>Sapphire.ValueLabelService.Enum</id>
        <overrides>Sapphire.ValueLabelService.Default</overrides>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ValueImageService</type>
        <factory>org.eclipse.sapphire.modeling.internal.DefaultValueImageService$Factory</factory>
        <id>Sapphire.ValueImageService.Default</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.modeling.ValueImageService</type>
        <factory>org.eclipse.sapphire.modeling.internal.EnumValueImageService$Factory</factory>
        <id>Sapphire.ValueImageService.Enum</id>
        <overrides>Sapphire.ValueImageService.Default</overrides>
    </model-property-service>
    <model-element-service>
        <type>org.eclipse.sapphire.services.ModelElementDocumentationService</type>
        <factory>org.eclipse.sapphire.services.internal.StandardModelElementDocumentationService$Factory</factory>
        <id>Sapphire.ModelElementDocumentationService.Standard</id>
    </model-element-service>
    <model-property-service>
        <type>org.eclipse.sapphire.services.ModelPropertyDocumentationService</type>
        <factory>org.eclipse.sapphire.services.internal.StandardModelPropertyDocumentationService$Factory</factory>
        <id>Sapphire.ModelPropertyDocumentationService.Standard</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about property by using static content specified in @Fact and @Facts annotations.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.StaticFactsService$Factory</factory>
        <id>Sapphire.FactsService.Static</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about property's default value by using semantical information specified by DefaultValueService and @DefaultValue annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.DefaultValueFactsService$Factory</factory>
        <id>Sapphire.FactsService.DefaultValue</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about numeric value property's range by using semantical information specified by @NumericRange annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.NumericRangeFactsService$Factory</factory>
        <id>Sapphire.FactsService.NumericRange</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about property's optionality by using semantical information specified by @Required annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.RequiredPropertyFactsService$Factory</factory>
        <id>Sapphire.FactsService.Required</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about property's read-only state by using semantical information specified by @ReadOnly annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.ReadOnlyPropertyFactsService$Factory</factory>
        <id>Sapphire.FactsService.ReadOnly</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about list property's count constraint by using semantical information specified by @CountConstraint annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.CountConstraintFactsService$Factory</factory>
        <id>Sapphire.FactsService.CountConstraint</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about property's absolute path requirement by using semantical information specified by @AbsolutePath annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.AbsolutePathFactsService$Factory</factory>
        <id>Sapphire.FactsService.AbsolutePath</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about existence requirement on the entity referenced by property's value by using semantical information specified by @MustExist annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.MustExistFactsService$Factory</factory>
        <id>Sapphire.FactsService.MustExist</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about value property's uniqueness constraint by using semantical information specified by @NoDuplicates annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.NoDuplicatesFactsService$Factory</factory>
        <id>Sapphire.FactsService.NoDuplicates</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about valid file extensions for property's value by using semantical information specified by @FileExtensions annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.FileExtensionsFactsService$Factory</factory>
        <id>Sapphire.FactsService.FileExtensions</id>
    </model-property-service>
    <model-property-service>
        <description>Creates fact statements about valid file system resource type (file or folder) for property's value by using semantical information specified by @ValidFileSystemResourceType annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.ValidFileSystemResourceTypeFactsService$Factory</factory>
        <id>Sapphire.FactsService.ValidFileSystemResourceType</id>
    </model-property-service>
    <model-property-service>
        <type>org.eclipse.sapphire.services.FactsAggregationService</type>
        <factory>org.eclipse.sapphire.services.internal.FactsAggregationServiceFactory</factory>
        <id>Sapphire.FactsAggregationService</id>
    </model-property-service>
    <model-property-service>
        <description>Implementation of FileExtensionsService that derives its behavior from @FileExtensions annotation.</description>
        <type>org.eclipse.sapphire.services.FileExtensionsService</type>
        <factory>org.eclipse.sapphire.services.internal.DeclarativeFileExtensionsService$Factory</factory>
        <id>Sapphire.FileExtensionsService.Declarative</id>
    </model-property-service>
    <value-serialization-service>
        <type>java.lang.Enum</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.EnumSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.lang.Boolean</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.BooleanSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.lang.Integer</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.IntegerSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.lang.Long</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.LongSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.lang.Float</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.FloatSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.lang.Double</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.DoubleSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.math.BigInteger</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.BigIntegerSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.math.BigDecimal</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.BigDecimalSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <type>java.net.URL</type>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.UrlSerializationService</impl>
    </value-serialization-service>
    <value-serialization-service>
        <impl>org.eclipse.sapphire.modeling.serialization.internal.PathSerializationService</impl>
        <type>org.eclipse.sapphire.modeling.Path</type>
    </value-serialization-service>
    <value-serialization-service>
        <type>org.eclipse.sapphire.modeling.el.Function</type>
        <impl>org.eclipse.sapphire.modeling.el.internal.FunctionSerializationService</impl>
    </value-serialization-service>
    <function>
        <name>Concat</name>
        <impl>org.eclipse.sapphire.modeling.el.ConcatFunction</impl>
        <description>Concatenates two or more strings into a single string. Particularly useful in contexts where composite expressions cannot be used, such as where the result of concatenation needs to feed into another function or operator.</description>
    </function>
    <function>
        <name>FirstSegment</name>
        <impl>org.eclipse.sapphire.modeling.el.FirstSegmentFunction</impl>
        <description>Breaks a string into segments using the provided separators and returns the first segment. If no separators are found in the string, the entire string is returned. This function takes two string operands. The first is the string to tokenize. The second is a sequence of characters that individually should be treated as valid separators.</description>
    </function>
    <function>
        <name>LastSegment</name>
        <impl>org.eclipse.sapphire.modeling.el.LastSegmentFunction</impl>
        <description>Breaks a string into segments using the provided separators and returns the last segment. If no separators are found in the string, the entire string is returned. This function takes two string operands. The first is the string to tokenize. The second is a sequence of characters that individually should be treated as valid separators.</description>
    </function>
    <function>
        <name>Parent</name>
        <impl>org.eclipse.sapphire.modeling.el.ParentElementFunction</impl>
        <description>Returns the parent of the current model element.</description>
    </function>
    <function>
        <name>Root</name>
        <impl>org.eclipse.sapphire.modeling.el.RootElementFunction</impl>
        <description>Returns the root of the model.</description>
    </function>
    <function>
        <name>List</name>
        <impl>org.eclipse.sapphire.modeling.el.ListFunction</impl>
        <description>Constructs a list from arbitrary number of operands.</description>
    </function>
</extension>
