<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 ******************************************************************************
 * Copyright (c) 2012 Oracle
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Konstantin Komissarchik - initial implementation and ongoing maintenance
 ******************************************************************************
-->

<extension xmlns="http://www.eclipse.org/sapphire/xmlns/extension">
    <service>
        <type>org.eclipse.sapphire.services.ImageService</type>
        <context>Sapphire.Element.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StaticImageService$Factory</factory>
        <id>Sapphire.ImageService.Static</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.DefaultValueService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StandardDefaultValueService$Factory</factory>
        <id>Sapphire.DefaultValueService.Standard</id>
        <description>Implementation of DefaultValueService that draws the default value from @DefaultValue annotation.</description>
    </service>
    <service>
        <id>Sapphire.InitialValueService.Standard</id>
        <type>org.eclipse.sapphire.services.InitialValueService</type>
        <factory>org.eclipse.sapphire.services.internal.StandardInitialValueService$Factory</factory>
        <description>Implementation of InitialValueService that draws the initial value from @InitialValue annotation.</description>
        <context>Sapphire.Property.Instance</context>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.PossibleValuesService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.PossibleValuesServiceFactory</factory>
        <id>Sapphire.PossibleValuesService</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.PossibleValuesService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.EnumPossibleValuesService$Factory</factory>
        <id>Sapphire.PossibleValuesService.Enum</id>
    </service>
    <service>
        <context>Sapphire.Element.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ElementValidationAggregationService$Factory</factory>
        <id>Sapphire.ValidationAggregationService.Element</id>
        <type>org.eclipse.sapphire.services.ValidationAggregationService</type>
        <description>Implementation of ValidationAggregationService for element instance context.</description>
    </service>
    <service>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.PropertyValidationAggregationService$Factory</factory>
        <id>Sapphire.ValidationAggregationService.Property</id>
        <type>org.eclipse.sapphire.services.ValidationAggregationService</type>
        <description>Implementation of ValidationAggregationService for property instance context.</description>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.CountConstraintValidationService$Factory</factory>
        <id>Sapphire.ValidationService.CountConstraint</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.RequiredPropertyValidationService$Factory</factory>
        <id>Sapphire.ValidationService.RequiredProperty</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.UniqueValueValidationServiceFactory</factory>
        <id>Sapphire.ValidationService.UniqueValue</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ReferenceValidationService$Factory</factory>
        <id>Sapphire.ValidationService.Reference</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.AbsolutePathValidationService$Factory</factory>
        <id>Sapphire.ValidationService.AbsolutePath</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.RelativePathValidationService$Factory</factory>
        <id>Sapphire.ValidationService.RelativePath</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.MalformedValueValidationService$Factory</factory>
        <id>Sapphire.ValidationService.MalformedValue</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.PossibleValuesValidationService$Factory</factory>
        <id>Sapphire.ValidationService.PossibleValues</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.NumericRangeValidationService$Factory</factory>
        <id>Sapphire.ValidationService.NumericRange</id>
    </service>
    <service>
        <id>Sapphire.ValidationService.Element.Standard</id>
        <type>org.eclipse.sapphire.services.ValidationService</type>
        <factory>org.eclipse.sapphire.services.internal.StandardElementValidationService$Factory</factory>
        <context>Sapphire.Element.Instance</context>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.EnablementService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ParentBasedEnablementService$Factory</factory>
        <id>Sapphire.EnablementService.ParentPropertyState</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.EnablementService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.FunctionBasedEnablementService$Factory</factory>
        <id>Sapphire.EnablementService.FunctionBased</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValueNormalizationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StandardValueNormalizationServiceFactory</factory>
        <id>Sapphire.ValueNormalizationService</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.RelativePathService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ModelRelativePathService$Factory</factory>
        <id>Sapphire.RelativePathService.Model</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValueLabelService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DefaultValueLabelService$Factory</factory>
        <id>Sapphire.ValueLabelService.Default</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValueLabelService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.EnumValueLabelService$Factory</factory>
        <id>Sapphire.ValueLabelService.Enum</id>
        <overrides>Sapphire.ValueLabelService.Default</overrides>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValueImageService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DefaultValueImageService$Factory</factory>
        <id>Sapphire.ValueImageService.Default</id>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.ValueImageService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.EnumValueImageService$Factory</factory>
        <id>Sapphire.ValueImageService.Enum</id>
        <overrides>Sapphire.ValueImageService.Default</overrides>
    </service>
    <service>
        <id>Sapphire.DocumentationService.Element.Standard</id>
        <type>org.eclipse.sapphire.services.DocumentationService</type>
        <context>Sapphire.Element.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StandardElementDocumentationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.DocumentationService.Property.Standard</id>
        <type>org.eclipse.sapphire.services.DocumentationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StandardPropertyDocumentationService$Factory</factory>
    </service>
    <service>
        <type>org.eclipse.sapphire.services.FactsAggregationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.FactsAggregationServiceFactory</factory>
        <id>Sapphire.FactsAggregationService</id>
    </service>
    <service>
        <description>Creates fact statements about property by using static content specified in @Fact and @Facts annotations.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.StaticFactsService$Factory</factory>
        <id>Sapphire.FactsService.Static</id>
    </service>
    <service>
        <description>Creates fact statements about property's default value by using semantical information specified by DefaultValueService and @DefaultValue annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DefaultValueFactsService$Factory</factory>
        <id>Sapphire.FactsService.DefaultValue</id>
    </service>
    <service>
        <id>Sapphire.FactsService.InitialValue</id>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <factory>org.eclipse.sapphire.services.internal.InitialValueFactsService$Factory</factory>
        <context>Sapphire.Property.Instance</context>
        <description>Creates fact statements about property's initial value by using semantical information specified by InitialValueService and @InitialValue annotation.</description>
    </service>
    <service>
        <description>Creates fact statements about numeric value property's range by using semantical information specified by @NumericRange annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.NumericRangeFactsService$Factory</factory>
        <id>Sapphire.FactsService.NumericRange</id>
    </service>
    <service>
        <description>Creates fact statements about property's optionality by using semantical information specified by @Required annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.RequiredPropertyFactsService$Factory</factory>
        <id>Sapphire.FactsService.Required</id>
    </service>
    <service>
        <description>Creates fact statements about property's read-only state by using semantical information specified by @ReadOnly annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ReadOnlyPropertyFactsService$Factory</factory>
        <id>Sapphire.FactsService.ReadOnly</id>
    </service>
    <service>
        <description>Creates fact statements about list property's count constraint by using semantical information specified by @CountConstraint annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.CountConstraintFactsService$Factory</factory>
        <id>Sapphire.FactsService.CountConstraint</id>
    </service>
    <service>
        <description>Creates fact statements about property's absolute path requirement by using semantical information specified by @AbsolutePath annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.AbsolutePathFactsService$Factory</factory>
        <id>Sapphire.FactsService.AbsolutePath</id>
    </service>
    <service>
        <description>Creates fact statements about existence requirement on the entity referenced by property's value by using semantical information specified by @MustExist annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.MustExistFactsService$Factory</factory>
        <id>Sapphire.FactsService.MustExist</id>
    </service>
    <service>
        <description>Creates fact statements about value property's uniqueness constraint by using semantical information specified by @NoDuplicates annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.NoDuplicatesFactsService$Factory</factory>
        <id>Sapphire.FactsService.NoDuplicates</id>
    </service>
    <service>
        <description>Creates fact statements about valid file extensions for property's value by using semantical information specified by @FileExtensions annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.FileExtensionsFactsService$Factory</factory>
        <id>Sapphire.FactsService.FileExtensions</id>
    </service>
    <service>
        <description>Creates fact statements about valid file system resource type (file or folder) for property's value by using semantical information specified by @ValidFileSystemResourceType annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ValidFileSystemResourceTypeFactsService$Factory</factory>
        <id>Sapphire.FactsService.ValidFileSystemResourceType</id>
    </service>
    <service>
        <description>Creates fact statements about property's deprecated state by using semantical information specified by @Deprecated annotation.</description>
        <type>org.eclipse.sapphire.services.FactsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DeprecatedPropertyFactsService$Factory</factory>
        <id>Sapphire.FactsService.Deprecated</id>
    </service>
    <service>
        <description>Implementation of FileExtensionsService that derives its behavior from @FileExtensions annotation.</description>
        <type>org.eclipse.sapphire.services.FileExtensionsService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DeclarativeFileExtensionsService$Factory</factory>
        <id>Sapphire.FileExtensionsService.Declarative</id>
    </service>
    <service>
        <description>Implementation of DependenciesService that exposes dependencies specified by the @DependsOn annotation.</description>
        <type>org.eclipse.sapphire.services.DependenciesService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DeclarativeDependenciesService$Factory</factory>
        <id>Sapphire.DependenciesService.Declarative</id>
    </service>
    <service>
        <description>Implementation of DependenciesService that exposes implied dependencies specified by the @NoDuplicates annotation.</description>
        <type>org.eclipse.sapphire.services.DependenciesService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.UniqueValueDependenciesService$Factory</factory>
        <id>Sapphire.DependenciesService.UniqueValue</id>
    </service>
    <service>
        <description>Aggregates the data from all applicable dependencies services in order to produce a single set of dependencies. An implementation of this service is provided with Sapphire. This service is not intended to be implemented by adopters.</description>
        <type>org.eclipse.sapphire.services.DependenciesAggregationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DependenciesAggregationServiceFactory</factory>
        <id>Sapphire.DependenciesAggregationService</id>
    </service>
    <service>
        <id>Sapphire.ValueSerializationMasterService</id>
        <type>org.eclipse.sapphire.services.ValueSerializationMasterService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ValueSerializationMasterServiceFactory</factory>
        <description>Performs serialization of values by delegating to a ValueSerializationService, if one is available. Every value property is guaranteed to have a ValueSerializationMasterService, even if it is a string property or a serialization service was erroneously not provided. An implementation of this service is provided with Sapphire. This service is not intended to be implemented by adopters.</description>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Enum</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.EnumSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Boolean</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.BooleanSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Byte</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ByteSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Short</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.ShortSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Integer</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.IntegerSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Long</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.LongSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Float</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.FloatSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Double</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DoubleSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.BigInteger</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.BigIntegerSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.BigDecimal</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.BigDecimalSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Date</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.DateSerializationServiceFactory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Uri</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.UriSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Url</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.UrlSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Path</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.PathSerializationService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ValueSerializationService.Function</id>
        <type>org.eclipse.sapphire.services.ValueSerializationService</type>
        <context>Sapphire.Property.Instance</context>
        <factory>org.eclipse.sapphire.services.internal.FunctionSerializationService$Factory</factory>
    </service>
    <function>
        <name>Concat</name>
        <impl>org.eclipse.sapphire.modeling.el.ConcatFunction</impl>
        <description>Concatenates two or more strings into a single string. Particularly useful in contexts where composite expressions cannot be used, such as where the result of concatenation needs to feed into another function or operator.</description>
    </function>
    <function>
        <name>FirstSegment</name>
        <impl>org.eclipse.sapphire.modeling.el.FirstSegmentFunction</impl>
        <description>Breaks a string into segments using the provided separators and returns the first segment. If no separators are found in the string, the entire string is returned. This function takes two string operands. The first is the string to tokenize. The second is a sequence of characters that individually should be treated as valid separators.</description>
    </function>
    <function>
        <name>LastSegment</name>
        <impl>org.eclipse.sapphire.modeling.el.LastSegmentFunction</impl>
        <description>Breaks a string into segments using the provided separators and returns the last segment. If no separators are found in the string, the entire string is returned. This function takes two string operands. The first is the string to tokenize. The second is a sequence of characters that individually should be treated as valid separators.</description>
    </function>
    <function>
        <name>Parent</name>
        <impl>org.eclipse.sapphire.modeling.el.ParentElementFunction</impl>
        <description>Returns the parent of the current model element.</description>
    </function>
    <function>
        <name>Root</name>
        <impl>org.eclipse.sapphire.modeling.el.RootElementFunction</impl>
        <description>Returns the root of the model.</description>
    </function>
    <function>
        <name>Image</name>
        <impl>org.eclipse.sapphire.modeling.el.ImageFunction</impl>
        <description>Returns the image associated with the context model element.</description>
    </function>
    <function>
        <name>List</name>
        <impl>org.eclipse.sapphire.modeling.el.ListFunction</impl>
        <description>Constructs a list from arbitrary number of operands.</description>
    </function>
    <function>
        <name>InstanceOf</name>
        <impl>org.eclipse.sapphire.modeling.el.InstanceOfFunction</impl>
        <description>Determines if an object is of specified type. The object to be checked is the first operand and the type is the second operand. The type must be a fully-qualified Java class name.</description>
    </function>
    <service>
        <id>Sapphire.PossibleTypesService.Standard</id>
        <type>org.eclipse.sapphire.services.PossibleTypesService</type>
        <context>Sapphire.Property.MetaModel</context>
        <description>Implementation of PossibleTypesService using information specified by @Type annotation.</description>
        <factory>org.eclipse.sapphire.services.internal.StandardPossibleTypesService$Factory</factory>
    </service>
    <service>
        <id>Sapphire.ContentProposalService.PossibleValues</id>
        <type>org.eclipse.sapphire.services.ContentProposalService</type>
        <factory>org.eclipse.sapphire.services.internal.PossibleValuesContentProposalService$Factory</factory>
        <context>Sapphire.Property.Instance</context>
        <description>Implementation of ContentProposalService based on PossibleValuesService.</description>
    </service>
    <service>
        <id>Sapphire.DerivedValueService.Standard</id>
        <type>org.eclipse.sapphire.services.DerivedValueService</type>
        <factory>org.eclipse.sapphire.services.internal.StandardDerivedValueService$Factory</factory>
        <context>Sapphire.Property.Instance</context>
    </service>
    <function>
        <name>Scale</name>
        <impl>org.eclipse.sapphire.modeling.el.ScaleFunction</impl>
        <description>Changes the scale of a decimal.</description>
    </function>
    <function>
        <name>Sum</name>
        <impl>org.eclipse.sapphire.modeling.el.SumFunction</impl>
        <description>Computes the sum of numbers in a collection. Typically, this function takes the collection as the sole parameter. However, when the collection is a model element list, a second parameter may be necessary to specify the name (in the form of a string) of the list entry's value property to use in aggregation. If the the collection is a model element list and the second parameter is not specified, this function will use list entry's first value property for aggregation. A sum of an empty collection is 0.</description>
    </function>
    <function>
        <name>Avg</name>
        <impl>org.eclipse.sapphire.modeling.el.AvgFunction</impl>
        <description>Computes the average of numbers in a collection. Typically, this function takes the collection as the sole parameter. However, when the collection is a model element list, a second parameter may be necessary to specify the name (in the form of a string) of the list entry's value property to use in aggregation. If the the collection is a model element list and the second parameter is not specified, this function will use list entry's first value property for aggregation. An average of an empty collection is 0.</description>
    </function>
    <function>
        <name>Min</name>
        <impl>org.eclipse.sapphire.modeling.el.MinFunction</impl>
        <description>Finds the smallest number in a collection. Typically, this function takes the collection as the sole parameter. However, when the collection is a model element list, a second parameter may be necessary to specify the name (in the form of a string) of the list entry's value property to use in aggregation. If the the collection is a model element list and the second parameter is not specified, this function will use list entry's first value property for aggregation.</description>
    </function>
    <function>
        <name>Max</name>
        <impl>org.eclipse.sapphire.modeling.el.MaxFunction</impl>
        <description>Finds the largest number in a collection. Typically, this function takes the collection as the sole parameter. However, when the collection is a model element list, a second parameter may be necessary to specify the name (in the form of a string) of the list entry's value property to use in aggregation. If the the collection is a model element list and the second parameter is not specified, this function will use list entry's first value property for aggregation.</description>
    </function>
</extension>
